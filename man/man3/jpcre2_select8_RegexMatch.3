.TH "jpcre2::select8< Char_T >::RegexMatch" 3 "Sun Oct 16 2016" "Version 10.27.02" "JPCRE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jpcre2::select8< Char_T >::RegexMatch \- Provides the \fBRegexMatch::match()\fP function to perform regex matching\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRegexMatch\fP & \fBreset\fP ()"
.br
.RI "Reset all class variables to its default (initial) state\&. "
.ti -1c
.RI "\fBString\fP \fBgetSubject\fP ()"
.br
.RI "Get subject string\&. "
.ti -1c
.RI "std::string \fBgetModifier\fP ()"
.br
.RI "Calculate modifier string from PCRE2 and JPCRE2 options and return it\&. "
.ti -1c
.RI "\fBUint\fP \fBgetPcre2Option\fP ()"
.br
.RI "Get PCRE2 option\&. "
.ti -1c
.RI "\fBUint\fP \fBgetJpcre2Option\fP ()"
.br
.RI "Get JPCRE2 option\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBresetErrors\fP ()"
.br
.RI "Reset errors to zero\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBsetNumberedSubstringVector\fP (\fBVecNum\fP *v)"
.br
.RI "Set a pointer to the numbered substring vector\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBsetNamedSubstringVector\fP (\fBVecNas\fP *v)"
.br
.RI "Set a pointer to the named substring vector\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBsetNameToNumberMapVector\fP (\fBVecNtN\fP *v)"
.br
.RI "Set a pointer to the name to number map vector\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBsetSubject\fP (const \fBString\fP &s)"
.br
.RI "Set the subject string for match\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBsetModifier\fP (const std::string &s)"
.br
.RI "Set the modifier (overwrites existing JPCRE2 and PCRE2 option)\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBsetJpcre2Option\fP (\fBUint\fP x)"
.br
.RI "Set JPCRE2 option for match (overwrite existing option) "
.ti -1c
.RI "\fBRegexMatch\fP & \fBsetPcre2Option\fP (\fBUint\fP x)"
.br
.RI "Set PCRE2 option match (overwrite existing option) "
.ti -1c
.RI "\fBRegexMatch\fP & \fBsetFindAll\fP (bool x)"
.br
.RI "Set whether to perform global match\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBsetFindAll\fP ()"
.br
.RI "This is an overloaded member function, provided for convenience\&. It differs from the above function only in what argument(s) it accepts\&.
.PP
This function just calls \fBRegexMatch::setFindAll(bool x)\fP with \fCtrue\fP as the parameter\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBchangeModifier\fP (const std::string &, bool)"
.br
.RI "After a call to this function PCRE2 and JPCRE2 options will be properly set\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBchangeJpcre2Option\fP (\fBUint\fP opt, bool x)"
.br
.RI "Parse modifier and add/remove equivalent PCRE2 and JPCRE2 options\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBchangePcre2Option\fP (\fBUint\fP opt, bool x)"
.br
.RI "Add or remove a PCRE2 option\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBaddModifier\fP (const std::string &mod)"
.br
.RI "Parse modifier string and add equivalent PCRE2 and JPCRE2 options\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBaddJpcre2Option\fP (\fBUint\fP x)"
.br
.RI "Add option to existing JPCRE2 options for match\&. "
.ti -1c
.RI "\fBRegexMatch\fP & \fBaddPcre2Option\fP (\fBUint\fP x)"
.br
.RI "Add option to existing PCRE2 options for match\&. "
.ti -1c
.RI "\fBSIZE_T\fP \fBmatch\fP (void)"
.br
.RI "Perfor match operaton using info from class variables and return the match count\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class Char_T>
.br
class jpcre2::select8< Char_T >::RegexMatch"
Provides the \fBRegexMatch::match()\fP function to perform regex matching\&. 

Provides chained methods to set various options\&.
.PP
All constructors of this class are private\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::addJpcre2Option (\fBUint\fP x)\fC [inline]\fP"

.PP
Add option to existing JPCRE2 options for match\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP Option value 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBRegexReplace::addJpcre2Option()\fP 
.PP
\fBRegex::addJpcre2Option()\fP 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::addModifier (const std::string & mod)\fC [inline]\fP"

.PP
Parse modifier string and add equivalent PCRE2 and JPCRE2 options\&. This is just a wrapper of the original function \fBRegexMatch::changeModifier()\fP provided for convenience\&.
.PP
\fBNote:\fP If speed of operation is very crucial, use \fBRegexMatch::addJpcre2Option()\fP and \fBRegexMatch::addPcre2Option()\fP with equivalent options\&. It will be faster that way\&. 
.PP
\fBParameters:\fP
.RS 4
\fImod\fP Modifier string 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBRegexReplace::addModifier()\fP 
.PP
\fBRegex::addModifier()\fP 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::addPcre2Option (\fBUint\fP x)\fC [inline]\fP"

.PP
Add option to existing PCRE2 options for match\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP Option value 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBRegexReplace::addPcre2Option()\fP 
.PP
\fBRegex::addPcre2Option()\fP 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::changeJpcre2Option (\fBUint\fP opt, bool x)\fC [inline]\fP"

.PP
Parse modifier and add/remove equivalent PCRE2 and JPCRE2 options\&. Add or remove a JPCRE2 option 
.PP
\fBParameters:\fP
.RS 4
\fIopt\fP JPCRE2 option value 
.br
\fIx\fP Add the option if it's true, remove otherwise\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBRegexReplace::changeJpcre2Option()\fP 
.PP
\fBRegex::changeJpcre2Option()\fP 
.RE
.PP

.SS "template<class Char_T > \fBjpcre2::select8\fP< Char_T >::RegexMatch::changeModifier (const std::string & mod, bool x)"

.PP
After a call to this function PCRE2 and JPCRE2 options will be properly set\&. This function does not initialize or re-initialize options\&. If you want to set options from scratch, initialize them to 0 before calling this function\&.
.PP
\fBNote:\fP If speed of operation is very crucial, use \fBRegexMatch::changeJpcre2Option()\fP and \fBRegexMatch::changePcre2Option()\fP with equivalent options\&. It will be faster that way\&.
.PP
If JPCRE2_ASSERT_INVALID_MODIFIER macro is defined, invalid modifier will give you runtime error and yield to immediate termination of the program\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIChar_T\fP Character type 
.RE
.PP
\fBParameters:\fP
.RS 4
\fImod\fP Modifier string 
.br
\fIx\fP Whether to add or remove option 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the \fBRegexMatch\fP object 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBjpcre2::select8<Char_T>::Regex::changeModifier()\fP 
.PP
\fBjpcre2::select8<Char_T>::RegexReplace::changeModifier()\fP 
.RE
.PP

.PP
References jpcre2::select8< Char_T >::Regex::changeJpcre2Option(), jpcre2::select8< Char_T >::Regex::changePcre2Option(), jpcre2::MOD::M_N, jpcre2::MOD::M_V, jpcre2::MOD::MJ_N, jpcre2::MOD::MJ_V, and jpcre2::select8< Char_T >::toString()\&.
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::changePcre2Option (\fBUint\fP opt, bool x)\fC [inline]\fP"

.PP
Add or remove a PCRE2 option\&. 
.PP
\fBParameters:\fP
.RS 4
\fIopt\fP PCRE2 option value 
.br
\fIx\fP Add the option if it's true, remove otherwise\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBRegexReplace::changePcre2Option()\fP 
.PP
\fBRegex::changePcre2Option()\fP 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::getJpcre2Option ()\fC [inline]\fP"

.PP
Get JPCRE2 option\&. 
.PP
\fBReturns:\fP
.RS 4
JPCRE2 options for math operation 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBjpcre2::select8<Char_T>::Regex::getJpcre2Option()\fP 
.PP
\fBjpcre2::select8<Char_T>::RegexReplace::getJpcre2Option()\fP 
.RE
.PP

.SS "template<class Char_T > \fBjpcre2::select8\fP< Char_T >::RegexMatch::getModifier ()"

.PP
Calculate modifier string from PCRE2 and JPCRE2 options and return it\&. Do remember that modifiers (or PCRE2 and JPCRE2 options) do not change or get initialized as long as you don't do that explicitly\&. Calling \fBRegexMatch::setModifier()\fP will re-set them\&.
.PP
\fBMixed or combined modifier\fP\&.
.PP
Some modifier may include other modifiers i\&.e they have the same meaning of some modifiers combined together\&. For example, the 'n' modifier includes the 'u' modifier and together they are equivalent to \fCPCRE2_UTF | PCRE2_UCP\fP\&. When you set a modifier like this, both options get set, and when you remove the 'n' modifier \fBRegexMatch::changeModifier()\fP, both will get removed 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIChar_T\fP Character type 
.RE
.PP
\fBReturns:\fP
.RS 4
Calculated modifier string (std::string) 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBjpcre2::select8<Char_T>::Regex::getModifier()\fP 
.PP
jpcre2::select8<Char_T>::RegexMatchReplace::getModifier() 
.RE
.PP

.PP
References jpcre2::MOD::M_N, jpcre2::MOD::M_V, jpcre2::MOD::MJ_N, and jpcre2::MOD::MJ_V\&.
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::getPcre2Option ()\fC [inline]\fP"

.PP
Get PCRE2 option\&. 
.PP
\fBReturns:\fP
.RS 4
PCRE2 option for match operation 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBjpcre2::select8<Char_T>::Regex::getPcre2Option()\fP 
.PP
\fBjpcre2::select8<Char_T>::RegexReplace::getPcre2Option()\fP 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::getSubject ()\fC [inline]\fP"

.PP
Get subject string\&. 
.PP
\fBReturns:\fP
.RS 4
subject string 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBjpcre2::select8<Char_T>::RegexReplace::getSubject()\fP 
.RE
.PP

.SS "template<class Char_T > \fBjpcre2::select8\fP< Char_T >::RegexMatch::match (void)"

.PP
Perfor match operaton using info from class variables and return the match count\&. 
.PP
\fBReturns:\fP
.RS 4
Match count 
.RE
.PP

.PP
References jpcre2::FIND_ALL\&.
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::reset ()\fC [inline]\fP"

.PP
Reset all class variables to its default (initial) state\&. Data in the vectors will retain\&. You will need to pass vector pointers again after calling this function to get match results\&. 
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object\&. 
.RE
.PP

.SS "template<class Char_T > \fBjpcre2::select8\fP< Char_T >::RegexMatch::resetErrors ()"

.PP
Reset errors to zero\&. If you want to examine the error status of a function call in the method chain, add this function just before your target function so that the error is set to zero before that target function is called, and leave everything out after the target function so that there will be no additional errors from other function calls\&.
.PP
This function is callable from everywhere in a method chain, i\&.e other copy of this function for other classes are available and they do the exactly same thing\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIChar_T\fP Character type\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
A reference to the \fBRegexMatch\fP object 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBjpcre2::select8<Char_T>::Regex::resetErrors()\fP 
.PP
\fBjpcre2::select8<Char_T>::RegexReplace::resetErrors()\fP 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::setFindAll ()\fC [inline]\fP"

.PP
This is an overloaded member function, provided for convenience\&. It differs from the above function only in what argument(s) it accepts\&.
.PP
This function just calls \fBRegexMatch::setFindAll(bool x)\fP with \fCtrue\fP as the parameter\&. 
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::setFindAll (bool x)\fC [inline]\fP"

.PP
Set whether to perform global match\&. 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP True or False 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::setJpcre2Option (\fBUint\fP x)\fC [inline]\fP"

.PP
Set JPCRE2 option for match (overwrite existing option) 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP Option value 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBjpcre2::select8<Char_T>::RegexReplace::setJpcre2Option()\fP 
.PP
\fBjpcre2::select8<Char_T>::Regex::setJpcre2Option()\fP 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::setModifier (const std::string & s)\fC [inline]\fP"

.PP
Set the modifier (overwrites existing JPCRE2 and PCRE2 option)\&. Re-initializes the option bits for PCRE2 and JPCRE2 options, then parses the modifier to set their equivalent options\&.
.PP
\fBNote:\fP If speed of operation is very crucial, use \fBRegexMatch::setJpcre2Option()\fP and \fBRegexMatch::setPcre2Option()\fP with equivalent options\&. It will be faster that way\&. 
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Modifier string 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBjpcre2::select8<Char_T>::RegexReplace::setModifier()\fP 
.PP
\fBjpcre2::select8<Char_T>::Regex::setModifier()\fP 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::setNamedSubstringVector (\fBVecNas\fP * v)\fC [inline]\fP"

.PP
Set a pointer to the named substring vector\&. This vector will be populated with named captured groups\&. 
.PP
\fBParameters:\fP
.RS 4
\fIv\fP pointer to the named substring vector 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::setNameToNumberMapVector (\fBVecNtN\fP * v)\fC [inline]\fP"

.PP
Set a pointer to the name to number map vector\&. This vector will be populated with name to number map for captured groups\&. 
.PP
\fBParameters:\fP
.RS 4
\fIv\fP pointer to the name to number map vector 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::setNumberedSubstringVector (\fBVecNum\fP * v)\fC [inline]\fP"

.PP
Set a pointer to the numbered substring vector\&. This vector will be filled with numbered (indexed) captured groups\&. 
.PP
\fBParameters:\fP
.RS 4
\fIv\fP pointer to the numbered substring vector 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::setPcre2Option (\fBUint\fP x)\fC [inline]\fP"

.PP
Set PCRE2 option match (overwrite existing option) 
.PP
\fBParameters:\fP
.RS 4
\fIx\fP Option value 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBjpcre2::select8<Char_T>::RegexReplace::setPcre2Option()\fP 
.PP
\fBjpcre2::select8<Char_T>::Regex::setPcre2Option()\fP 
.RE
.PP

.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::RegexMatch::setSubject (const \fBString\fP & s)\fC [inline]\fP"

.PP
Set the subject string for match\&. 
.PP
\fBParameters:\fP
.RS 4
\fIs\fP Subject string 
.RE
.PP
\fBReturns:\fP
.RS 4
Reference to the calling \fBRegexMatch\fP object 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBjpcre2::select8<Char_T>::RegexReplace::setSubject()\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for JPCRE2 from the source code\&.
