.TH "jpcre2::select8< Char_T >" 3 "Fri Sep 23 2016" "Version 10.27.01" "JPCRE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jpcre2::select8< Char_T > \- struct to select 8 bit code unit width and the character type\&.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBRegex\fP"
.br
.RI "Implements public overloaded and copy constructors, provides functions to set/unset various options and perform regex match and replace against a compiled pattern\&. "
.ti -1c
.RI "class \fBRegexMatch\fP"
.br
.RI "Provides the \fBRegexMatch::match()\fP function to perform regex matching\&. "
.ti -1c
.RI "class \fBRegexReplace\fP"
.br
.RI "Provides the \fBRegexReplace::replace()\fP function to perform regex replace on a string\&. "
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef Char_T \fBChar\fP"
.br
.RI "Typedef for character (either one of \fCchar\fP, \fCwchar_t\fP, \fCchar16_t\fP, \fCchar32_t\fP that was passed with \fC\fBjpcre2::select8\fP<Char_T>\fP)\&. "
.ti -1c
.RI "typedef std::basic_string< Char_T > \fBString\fP"
.br
.RI "Typedef for string (either one of \fCstd::string\fP, \fCstd::wstring\fP, \fCstd::u16string\fP, \fCstd::u32string\fP)\&. "
.ti -1c
.RI "typedef std::map< \fBString\fP, \fBString\fP > \fBMapNas\fP"
.br
.RI "Map for Named substrings\&. "
.ti -1c
.RI "typedef std::map< \fBSIZE_T\fP, \fBString\fP > \fBMapNum\fP"
.br
.RI "Map for Numbered substrings\&. "
.ti -1c
.RI "typedef std::map< \fBString\fP, \fBSIZE_T\fP > \fBMapNtN\fP"
.br
.RI "Substring name to Substring number map\&. "
.ti -1c
.RI "typedef \fBMapNtN\fP \fBMapNtn\fP"
.br
.RI "Allow spelling mistake of MapNtN as MapNtn\&. "
.ti -1c
.RI "typedef std::vector< \fBMapNas\fP > \fBVecNas\fP"
.br
.RI "Vector of matches with named substrings\&. "
.ti -1c
.RI "typedef std::vector< \fBMapNtN\fP > \fBVecNtN\fP"
.br
.RI "Vector of substring name to substring number map\&. "
.ti -1c
.RI "typedef \fBVecNtN\fP \fBVecNtn\fP"
.br
.RI "Allow spelling mistake of VecNtN as VecNtn\&. "
.ti -1c
.RI "typedef std::vector< \fBMapNum\fP > \fBVecNum\fP"
.br
.RI "Vector of matches with numbered substrings\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBString\fP \fBtoString\fP (int)"
.br
.RI "Converts an integer to \fBjpcre2::select8<Char_T>::String\fP\&. "
.ti -1c
.RI "static \fBString\fP \fBtoString\fP (\fBChar\fP)"
.br
.RI "Converts a Char_T to \fBjpcre2::select8<Char_T>::String\fP\&. "
.ti -1c
.RI "static \fBString\fP \fBtoString\fP (const \fBChar\fP *)"
.br
.RI "Converts an const Char_T* to \fBjpcre2::select8<Char_T>::String\fP\&. "
.ti -1c
.RI "static \fBString\fP \fBtoString\fP (PCRE2_UCHAR *)"
.br
.RI "Converts a PCRE2_UCHAR* to \fBjpcre2::select8<Char_T>::String\fP\&. "
.ti -1c
.RI "static \fBString\fP \fBgetPcre2ErrorMessage\fP (int)"
.br
.RI "Return PCRE2 error message by error number\&. "
.ti -1c
.RI "static \fBString\fP \fBgetErrorMessage\fP (int, int)"
.br
.RI "Return error message according to error number and error offset\&. "
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class Char_T>
.br
struct jpcre2::select8< Char_T >"
struct to select 8 bit code unit width and the character type\&. 

If \fCPCRE2_CODE_UNIT_WIDTH 8\fP is defined you can access it without the suffix (8) i\&.e \fC\fBjpcre2::select\fP<Char_T>\fP\&.
.PP
Usage: \fC\fBjpcre2::select8\fP<Char_T>\fP\&.
.PP
The character type (\fCChar_T\fP) must be in accordance with the definition of PCRE2_CODE_UNIT_WIDTH\&. If it doesn't match with the character type, then the behavior is undefined\&. If the macro \fCJPCRE2_ENABLE_CODE_UNIT_VALIDATION\fP is defined , then such behavior will cause an assertion failure and immediate termination of the program\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIChar_T\fP Character type (\fCchar\fP, \fCwchar_t\fP, \fCchar16_t\fP, \fCchar32_t\fP)\&. 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBjpcre2::select16\fP 
.PP
\fBjpcre2::select32\fP 
.RE
.PP

.SH "Member Typedef Documentation"
.PP 
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::\fBChar\fP"

.PP
Typedef for character (either one of \fCchar\fP, \fCwchar_t\fP, \fCchar16_t\fP, \fCchar32_t\fP that was passed with \fC\fBjpcre2::select8\fP<Char_T>\fP)\&. 
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::\fBMapNas\fP"

.PP
Map for Named substrings\&. 
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::\fBMapNtN\fP"

.PP
Substring name to Substring number map\&. 
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::\fBMapNtn\fP"

.PP
Allow spelling mistake of MapNtN as MapNtn\&. 
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::\fBMapNum\fP"

.PP
Map for Numbered substrings\&. 
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::\fBString\fP"

.PP
Typedef for string (either one of \fCstd::string\fP, \fCstd::wstring\fP, \fCstd::u16string\fP, \fCstd::u32string\fP)\&. Defined as \fCstd::basic_string<Char_T>\fP\&. May be this list will make more sense: Character String  char std::string wchar_t std::wstring char16_t std::u16string (>=C++11) char32_t std::u32string (>=C++11) 
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::\fBVecNas\fP"

.PP
Vector of matches with named substrings\&. 
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::\fBVecNtN\fP"

.PP
Vector of substring name to substring number map\&. 
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::\fBVecNtn\fP"

.PP
Allow spelling mistake of VecNtN as VecNtn\&. 
.SS "template<class Char_T> \fBjpcre2::select8\fP< Char_T >::\fBVecNum\fP"

.PP
Vector of matches with numbered substrings\&. 
.SH "Member Function Documentation"
.PP 
.SS "template<class Char_T > \fBjpcre2::select8\fP< Char_T >::getErrorMessage (int err_num, int err_off)\fC [static]\fP"

.PP
Return error message according to error number and error offset\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIChar_T\fP Character type 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIerr_num\fP Error number 
.br
\fIerr_off\fP Error offset 
.RE
.PP
\fBReturns:\fP
.RS 4
Error message as a string (\fBjpcre2::select8<Char_T>::String\fP) 
.RE
.PP

.PP
References jpcre2::ERROR::JIT_COMPILE_FAILED\&.
.SS "template<class Char_T > \fBjpcre2::select8\fP< Char_T >::getPcre2ErrorMessage (int err_num)\fC [static]\fP"

.PP
Return PCRE2 error message by error number\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIChar_T\fP Character type 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIerr_num\fP PCRE2 error number 
.RE
.PP
\fBReturns:\fP
.RS 4
Error message as \fBjpcre2::select8<Char_T>::String\fP 
.RE
.PP

.SS "template<class Char_T > \fBjpcre2::select8\fP< Char_T >::\fBString\fP \fBjpcre2::select8\fP< Char_T >::toString (int x)\fC [static]\fP"

.PP
Converts an integer to \fBjpcre2::select8<Char_T>::String\fP\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIChar_T\fP Character type 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIx\fP Integer to be converted 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBjpcre2::select8<Char_T>::String\fP 
.RE
.PP

.PP
Referenced by jpcre2::select8< Char_T >::RegexMatch::changeModifier(), jpcre2::select8< Char_T >::RegexReplace::replace(), and jpcre2::select8< Char_T >::toString()\&.
.SS "template<class Char_T > \fBjpcre2::select8\fP< Char_T >::toString (const \fBChar\fP * a)\fC [static]\fP"

.PP
Converts an const Char_T* to \fBjpcre2::select8<Char_T>::String\fP\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIChar_T\fP Character type 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIa\fP Character pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBjpcre2::select8<Char_T>::String\fP 
.RE
.PP

.PP
References jpcre2::select8< Char_T >::toString()\&.
.SS "template<class Char_T > \fBjpcre2::select8\fP< Char_T >::toString (PCRE2_UCHAR * a)\fC [static]\fP"

.PP
Converts a PCRE2_UCHAR* to \fBjpcre2::select8<Char_T>::String\fP\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIChar_T\fP Character type 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIa\fP PCRE2_UCHAR pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBjpcre2::select8<Char_T>::String\fP 
.RE
.PP

.PP
References jpcre2::select8< Char_T >::toString()\&.
.SS "template<class Char_T > \fBjpcre2::select8\fP< Char_T >::toString (\fBChar\fP a)\fC [static]\fP"

.PP
Converts a Char_T to \fBjpcre2::select8<Char_T>::String\fP\&. 
.PP
\fBTemplate Parameters:\fP
.RS 4
\fIChar_T\fP Character type 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIa\fP Character to be converted 
.RE
.PP
\fBReturns:\fP
.RS 4
\fBjpcre2::select8<Char_T>::String\fP 
.RE
.PP

.PP
References jpcre2::select8< Char_T >::toString()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for JPCRE2 from the source code\&.
