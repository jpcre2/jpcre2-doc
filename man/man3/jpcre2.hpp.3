.TH "jpcre2.hpp" 3 "Thu Oct 27 2016" "Version 10.27.03" "JPCRE2" \" -*- nroff -*-
.ad l
.nh
.SH NAME
jpcre2.hpp \- Main header file for JPCRE2 library to be included by programs that uses its functionalities\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <pcre2\&.h>\fP
.br
\fC#include <string>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <map>\fP
.br
\fC#include <limits>\fP
.br
\fC#include <codecvt>\fP
.br
\fC#include <locale>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBjpcre2::Codecvt< internT, externT, stateT >\fP"
.br
.RI "Convenience wrapper of \fCstd::codecvt\fP\&. "
.ti -1c
.RI "struct \fBjpcre2::select8< Char_T >\fP"
.br
.RI "struct to select 8 bit code unit width and the character type\&. "
.ti -1c
.RI "class \fBjpcre2::select8< Char_T >::RegexMatch\fP"
.br
.RI "Provides the \fBRegexMatch::match()\fP function to perform regex matching\&. "
.ti -1c
.RI "class \fBjpcre2::select8< Char_T >::RegexReplace\fP"
.br
.RI "Provides the \fBRegexReplace::replace()\fP function to perform regex replace on a string\&. "
.ti -1c
.RI "class \fBjpcre2::select8< Char_T >::Regex\fP"
.br
.RI "Implements public overloaded and copy constructors, provides functions to set/unset various options and perform regex match and replace against a compiled pattern\&. "
.ti -1c
.RI "struct \fBjpcre2::select16< Char_T >\fP"
.br
.RI "struct to select 16 bit code unit width and the character type\&. "
.ti -1c
.RI "class \fBjpcre2::select16< Char_T >::RegexMatch\fP"
.br
.RI "Provides the \fBRegexMatch::match()\fP function to perform regex matching\&. "
.ti -1c
.RI "class \fBjpcre2::select16< Char_T >::RegexReplace\fP"
.br
.RI "Provides the \fBRegexReplace::replace()\fP function to perform regex replace on a string\&. "
.ti -1c
.RI "class \fBjpcre2::select16< Char_T >::Regex\fP"
.br
.RI "Implements public overloaded and copy constructors, provides functions to set/unset various options and perform regex match and replace against a compiled pattern\&. "
.ti -1c
.RI "struct \fBjpcre2::select32< Char_T >\fP"
.br
.RI "struct to select 32 bit code unit width and the character type\&. "
.ti -1c
.RI "class \fBjpcre2::select32< Char_T >::RegexMatch\fP"
.br
.RI "Provides the \fBRegexMatch::match()\fP function to perform regex matching\&. "
.ti -1c
.RI "class \fBjpcre2::select32< Char_T >::RegexReplace\fP"
.br
.RI "Provides the \fBRegexReplace::replace()\fP function to perform regex replace on a string\&. "
.ti -1c
.RI "class \fBjpcre2::select32< Char_T >::Regex\fP"
.br
.RI "Implements public overloaded and copy constructors, provides functions to set/unset various options and perform regex match and replace against a compiled pattern\&. "
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBjpcre2\fP"
.br
.RI "Top level namespace of JPCRE2\&. "
.ti -1c
.RI " \fBjpcre2::ERROR\fP"
.br
.RI "Namespace for error codes\&. "
.ti -1c
.RI " \fBjpcre2::INFO\fP"
.br
.RI "Namespace to provide information about JPCRE2 library itself\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBPCRE2_CODE_UNIT_WIDTH\fP"
.br
.RI "This macro must be defined to either 0, 8, 16 or 32 before including \fBjpcre2\&.hpp\fP\&. "
.ti -1c
.RI "#define \fBJPCRE2_CODE_UNIT_WIDTH\fP"
.br
.RI "Alias of \fBPCRE2_CODE_UNIT_WIDTH\fP\&. "
.ti -1c
.RI "#define \fBJPCRE2_ENABLE_CODE_UNIT_VALIDATION\fP"
.br
.RI "Enable a naive validation check of code unit width if defined before including \fBjpcre2\&.hpp\fP\&. "
.ti -1c
.RI "#define \fBJPCRE2_DISABLE_ERROR\fP"
.br
.RI "Disable all assertions if defined before including \fBjpcre2\&.hpp\fP\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef PCRE2_SIZE \fBjpcre2::SIZE_T\fP"
.br
.RI "Used for match count and vector size\&. "
.ti -1c
.RI "typedef uint32_t \fBjpcre2::Uint\fP"
.br
.RI "Used for options (bitwise operation) "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum { \fBjpcre2::ERROR::INVALID_MODIFIER\fP = 2, \fBjpcre2::ERROR::JIT_COMPILE_FAILED\fP = 3 }
.RI "ERROR numbers\&. ""
.br
.ti -1c
.RI "enum { \fBjpcre2::NONE\fP = 0x0000000u, \fBjpcre2::FIND_ALL\fP = 0x0000002u, \fBjpcre2::JIT_COMPILE\fP = 0x0000004u }
.RI "These constants provide JPCRE2 options\&. ""
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const SIZE_T \fBjpcre2::SUBSTITUTE_RESULT_INIT_SIZE\fP = std::numeric_limits<int>::max()"
.br
.RI "Used by default to provide big enough initial buffer for replaced string\&. "
.ti -1c
.RI "const std::string \fBjpcre2::LOCALE_NONE\fP = 'JPCRE2_NONE'"
.br
.RI "Don't do anything about locale if it is set to \fBjpcre2::LOCALE_NONE\fP\&. "
.ti -1c
.RI "const std::string \fBjpcre2::LOCALE_DEFAULT\fP = LOCALE_NONE"
.br
.RI "Default locale\&. "
.ti -1c
.RI "static thread_local std::wstring_convert< Codecvt< char16_t, char, std::mbstate_t >, char16_t > \fBjpcre2::convert16\fP"
.br
.RI "This is a convenience object (>=C++11) to convert between UTF-8 <> UTF-16\&. "
.ti -1c
.RI "static thread_local std::wstring_convert< Codecvt< char32_t, char, std::mbstate_t >, char32_t > \fBjpcre2::convert32\fP"
.br
.RI "This is a convenience object (>=C++11) to convert between UTF-8 <> UTF-32\&. "
.ti -1c
.RI "const std::string \fBjpcre2::INFO::NAME\fP = 'JPCRE2'"
.br
.RI "Name of the project\&. "
.ti -1c
.RI "const std::string \fBjpcre2::INFO::FULL_VERSION\fP = '10\&.27\&.03'"
.br
.RI "Full version string\&. "
.ti -1c
.RI "const std::string \fBjpcre2::INFO::VERSION_GENRE\fP = '10'"
.br
.RI "Generation, depends on original PCRE2 version\&. "
.ti -1c
.RI "const std::string \fBjpcre2::INFO::VERSION_MAJOR\fP = '27'"
.br
.RI "Major version, updated when API change is made\&. "
.ti -1c
.RI "const std::string \fBjpcre2::INFO::VERSION_MINOR\fP = '03'"
.br
.RI "Minor version, includes bug fix or minor feature upgrade\&. "
.ti -1c
.RI "const std::string \fBjpcre2::INFO::VERSION_PRE_RELEASE\fP = ''"
.br
.RI "Alpha or beta (testing) release version\&. "
.in -1c
.SH "Detailed Description"
.PP 
Main header file for JPCRE2 library to be included by programs that uses its functionalities\&. 

It includes the pcre2\&.h header, therefore you shouldn't include pcre2\&.h separately in your program\&. Make sure to link both JPCRE2 and PCRE2 library when compiling\&.
.PP
If you are using JPCRE2 with all of its source files, you won't need to link it with JPCRE2 library, but do remember that you still need to link with PCRE2 library\&. 
.PP
\fBAuthor:\fP
.RS 4
\fCMd Jahidul Hamid\fP 
.RE
.PP

.SH "Macro Definition Documentation"
.PP 
.SS "#define JPCRE2_CODE_UNIT_WIDTH"

.PP
Alias of \fBPCRE2_CODE_UNIT_WIDTH\fP\&. 
.SS "#define JPCRE2_DISABLE_ERROR"

.PP
Disable all assertions if defined before including \fBjpcre2\&.hpp\fP\&. Disable assert() to prevent terminating program in case error/undefined behavior occurs\&. 
.SS "#define JPCRE2_ENABLE_CODE_UNIT_VALIDATION"

.PP
Enable a naive validation check of code unit width if defined before including \fBjpcre2\&.hpp\fP\&. This gives a runtime assertion failure if code unit width mismatch occurs\&. 
.SS "#define PCRE2_CODE_UNIT_WIDTH"

.PP
This macro must be defined to either 0, 8, 16 or 32 before including \fBjpcre2\&.hpp\fP\&. 0 means you will be using multiple code unit width in your program\&.
.PP
The code unit width must match with the bit size of the character type you are going to use\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for JPCRE2 from the source code\&.
